移动端开发主要是对webkit内核进行兼容。
viewport(视口)：
    1.是浏览器显示页面内容的屏幕区域。
    2.视口分为：
        layout（布局） viewport布局视口：
            一般移动设备的浏览器默认设置了一个布局视口，用于解决早期pc端的页面在手机上显示的问题，分辨率基本都是980px，压缩成手机屏幕的大小，所以显示的内容很小，需要手动缩放才能看清内容。

        visual（视觉的） viewport（视口，视窗） 视觉视口：
            是用户在手机上看到的网站的区域。
            可以通过缩放去操作视觉视口，但不会影响布局视口，布局视口仍是原来的宽度。

        ideal(理想) viewport 理想视口：
            为了使网站在移动端有最理想的浏览和阅读宽度而设定的，设备多宽，布局视口就自动适应和设备屏幕一样宽，在html文件里写meta标签设置实现。

    3.meat视口标签：
        用来设置移动端的布局视口尺寸的。
        语法：
            <meta name="viewport" content="width-device(设备、终端), user-scalable=no, initial(初始)-scale=1.0, maximum-scale=1.0, minimum-scale=1.0">
            
        值：
            width:设置viewport宽度的，建议设置device-width(设备宽度)，会自适应将网页宽度变成设备宽度。

            initial-scale:初始缩放比例，取值是大于0的数字。
            minimum-scale:最小缩放比例，取值是大于0的数字。
            maximum-scale:最大缩放比例，取值是大于0的数字。

            user-scalable(可扩展的)：设置用户是否可以缩放，取值yes（1）或no（0）。
        标准的viewport设置：
            视口的宽度自适应设备的宽度，与设备保持一致；
            默认缩放比例1.0，就是不缩放；
            最小缩放比例1.0；
            最大缩放比例1.0；
            不允许用户自行缩放no或0；

    4.二倍图：
        像素和物理像素比：
            物理像素就是分辨率，物理像素点越多，显示越清晰；
            在pc端像素和物理像素是相等的，1px=1px，比如像素是个盒子，盒子里就装了1个和它同样大小的物理像素，比例是1：1；
            在移动端，为了屏幕显示更高清，会把2个或2个以上的物理像素点压缩到一个像素里。
            1px可能等于2个或2个以上的物理像素，比如像素是个盒子，现在盒子里装了2个物理像素来占满这个盒子，那表示2个物理像素才有1个像素大。这就比例就变成了1：2。
        插入的图片在移动端，1个像素会被放大成2个或以上的物理像素点显示，就会出现图片模糊，用二倍图解决这个问题：
            1.在引入图片的url时把原尺寸图片引入；
            2.在css里设置图片的宽高为原尺寸的一半。
            这样在移动端，物理像素将像素放大时，图片显示出来还是它的原尺寸，图片就不因为被放大变模糊。
        背景图的尺寸设置成二倍图，用background-size：宽 高; 来设置尺寸为原背景图尺寸的一半。
        
        设计稿用ps里的Cutterman切图神器可以直接切2倍图。
    5.移动端的开发方式：
        1.单独开发，和pc端分开。大型网站都是单独开发。
        2.响应式开发，和pc端共用一套代码，宽度自适应。小型网站可以用这种开发方式。
    
    6.移动端布局方式，因为浏览器支持非常好，可以大量使用最新布局方式：
        1.流式布局（百分比布局），不给固定宽度，全部使用百分比，让元素宽度可以自适应屏幕放大缩小。
        2.flex弹性盒布局（一维布局，通过设置x或y轴为主轴来排列里面的子元素），任何元素都可以转换成flex盒子模型，来控制里面的子元素的排列方式。和传统布局比，垂直居中特别方便。
        3.rme布局（rem是根元素html字体大小的相对单位），用rem单位，只要html字体大小改变，可以让元素宽、高字体大小图片大小都根据字体的变化自适应。用@media媒体查询设置屏幕宽度变化时html字体变化，就可以动态实现元素根据屏幕宽度自适应大小。
        4.grid布局（网格布局，二维布局，通过划分xy轴形成单元格，通过控制单元格来排列里面的子元素），水平居中垂直居中都特别方便，比flex布局强大，但没有flex布局兼容性支持的好。

    7.移动端css格式化文件：
        文件名：Normalize.css
        下载地址：https://necolas.github.io/normalize.css/
        别人写好的，下载直接用。
    8.移动端有些特殊样式，需要清除,用以下代码，部分我已经添加到css初始化文件Normalize.css里了：
        设置成css3的盒子模型，设置margin+padding+border都不会撑大盒子。
        box-sizing:border-box;
        -webkit-box-sizing:boredr-box;

        清除点击链接时的高亮，颜色设置成透明
        -webkit-tap-highlight（突出、加亮）-color: transparent;

        禁止长按页面时弹出菜单，这里给图片和a链接设置禁止弹出菜单
        img,a {-webkit-touch（触摸）-callout（调出）:none;}

        移动端的ios系统浏览器会给按钮和输入框设置苹果自带的默认样式，用下面的代码取消后，才能写css自定义它们的样式。
        -webkit-appearance(外观):none;




